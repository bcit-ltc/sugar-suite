@use "sass:color";
@use "../../variables/fonts" as *;
@use "../../variables/colors" as *;
@use "../../variables/sizing" as *;
@use "../../mixins/remove-top-bottom-margin";
@use "../../partials/containers/custom-max-width";
@use "../../partials/actions/button";

$accordion-text-color: $primary-text-color !default;
$accordion-button-background-color: $secondary-color-dark !default;
$accordion-button-text-color: $white !default;
$accordion-button-hover-background-color: $secondary-color !default;
$accordion-button-open-background-color: $secondary-color-darker !default;
$accordion-button-open-text-color: white !default;
$accordion-panel-background-color: color.adjust($secondary-color-lightest, $lightness:  2%) !default;
$accordion-panel-border-color: $secondary-color !default;
//Accordion Main Styles
.accordion,
.accordion-alt {
	@extend %custom-max-width;
	position: relative;
	color: $accordion-text-color;
	margin-bottom: $space;
	> ul {
		padding: 0;
		> li {
			list-style-type: none;
			margin: 0;
		}
	}
}

// TEMP... Used in conjunction JS to produce a checkbox that toggles between 'collapsing' and 'default' behaviour.
//.accordion-controls {
//	input {
//		cursor: pointer;
//		position: absolute;
//		right: -20px;
//		top: 2px;
//
//		height: 18px;
//		width: 18px;
//	}
//}

.accordion-toggle {
	@extend .btn;
	outline: none;
	cursor: s-resize;
	background: #d8d1d1;
	height: 100%;
	position: absolute;
	left: 0px;
	width: 15px;
	padding: 0;
	margin: 0;
}

//accordion handle
.accordion-button {
	cursor: pointer;
	background-color: $accordion-button-background-color;
	color: $accordion-button-text-color;
	display: block;
	font-size: $font-size-small-2;
	font-family: $primary-font;
	position: relative;
	padding: $pad-half;
	padding-right: 30px;
	border-radius: $border-radius-base;
	margin-left: 25px;
	margin-top: $space-half;
	margin-bottom: -4px;
	//@include transition;
	&:after {
		content: "\f105";
		position: absolute;
		top: 50%;
		right: 14px;
		font-family: FontAwesome;
		color: $white;
		transform: translateY(-50%) rotate(0turn);
		transition: transform .5s ease;
		outline: none;
	}
	&.open {
		background-color: $accordion-button-open-background-color;
		color: $accordion-button-open-text-color;
		&:after {
			transform: translateY(-50%) rotate(0.25turn);
			transform-origin: 50%;
			//			content: "\f107";
			//			font-family: FontAwesome;
			//			float: right;
		}
	}
	&:hover,
	&:focus {
		background: $accordion-button-hover-background-color;
		&:after {
			color: $white;
		}
	}
}

.accordion-alt .accordion-button {
	&:after {
		display: none;
	}
}

//accordion content styles
._bellow {
	@include remove-top-bottom-margin.remove-top-bottom-margin();
	background-color: $accordion-panel-background-color;
	font-family: $primary-font;
	padding: $pad-and-half;
	margin-left: 25px;
	border-bottom: 1px dotted $accordion-panel-border-color;
	border-left: 1px dotted $accordion-panel-border-color;
	border-right: 1px dotted $accordion-panel-border-color;
	border-radius: 0 0 $border-radius-base $border-radius-base;
	margin-bottom: $space-half;
    margin-top: 0;
}

._bellow > *:not(figure) {
	//    margin-top: $space-and-half;
	margin-bottom: $space-and-half;
}

._hidden {
    visibility: hidden;
    position: absolute;
    left: -9999px;
}