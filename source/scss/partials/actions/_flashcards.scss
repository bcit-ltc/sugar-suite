@use "../../variables/breakpoints" as *;
@use "../../partials/actions/button";
@use "../../partials/containers/custom-max-width";

@mixin cardStack {
    position: relative;
    /* Remove fixed height, use min/max for flexibility */
    min-height: 200px;
    max-height: 60vh;
    height: auto;
    margin: 2em 0.5em 2em;
    outline: none;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding-bottom: 100px; // Prevent controls from being covered
}

// Card Content Styling:
// Remove global .card, move all rules under .flashcard-container
.flashcard-container {
    @extend %custom-max-width;
    perspective: 1000px;
    position: relative;
    pointer-events: none;
    padding-top: 350px;
    clear: both;
    top: -350px;
    margin-bottom: -350px;
    width: auto;
    margin-left: 0;
    margin-right: 0;

    .card {
        position: absolute;
        display: flex;
        flex-direction: column;
        height: 100%;
        width: 100%;
        min-height: 200px;
        max-height: 60vh;
        line-height: 1.5;
        perspective: 1000px;
        transform-style: preserve-3d;
        backface-visibility: hidden;

        img {
            display: block;
            margin: 0 auto 10px auto;
            height: auto;
            max-width: 100%;
            max-height: 55vh;
            object-fit: contain;
            flex-shrink: 0;
            flex-grow: 0;
            pointer-events: none;
        }

        // Center content if only one child in .front or .back
        >.center-content {
            text-align: center !important;
        }

        .front,
        .back {
            perspective: 1000px;
            transition: transform .5s;
            box-shadow: 1px 2px 5px rgba(0, 0, 0, .3), inset 0 0 300px rgba(25, 28, 65, 0.05);
            backface-visibility: hidden;
            position: absolute;
            top: 0;
            left: 0;
            min-height: 200px;
            max-height: 60vh;
            /* height will be set by JS */
            width: 100%;
            margin-right: -150px;
            padding: 20px 15px 20px 15px;
            background: #fafafa;
            display: flex;
            flex-direction: column;
            justify-content: center;
            flex: 1 1 auto;

            img {
                display: block;
                margin: 0 auto 10px auto;
                height: auto;
                // width: 33%;
                max-width: 100%;
                max-height: 55vh;
                object-fit: contain;
                flex-shrink: 0;
                flex-grow: 0;
                pointer-events: none;
            }

            // Only the content below the image scrolls
            &>*:not(img) {
                // flex: 1 1 auto;
                overflow-y: auto;
                min-height: 0;
            }
        }
        
        .front {
            z-index: 2;
            transform: rotateY(0deg);
        }

        .back {
            transform: rotateY(-180deg);
        }

        .front:before,
        .back:before {
            content: "";
            display: inline-block;
            height: 100%;
            vertical-align: middle;
        }

        .centered {
            display: inline-block;
            vertical-align: middle;
        }


        &.top-card {
            z-index: 1001;
            transition: transform .5s ease; // messes up firefox
            transform: none !important;
        }


        // Add example styles to visually differentiate front and back using data-side attributes.
        .front[data-side="front"] {
            border-top: 4px solid #1976d2; // Blue accent for front
        }

        .back[data-side="back"] {
            border-top: 4px solid #f9a825; // Yellow accent for back
        }
    }


    .card-stack {
        @include cardStack;
        width: 100%;
        max-width: 100%;
    }


    // Allows the element following to sit against it
    +* {
        margin-top: -350px;
    }

    // Provide Interaction with top-card
    .top-card {
        .front {
            pointer-events: auto;
        }

        &.flipped {
            .front {
                pointer-events: none;
            }

            .back {
                pointer-events: auto;
            }
        }
    }

    &.no-number .card-counter {
        display: none !important;
    }
}


// ANIMATIONS
@keyframes swapNext {
    0% {
        transform: rotateZ(0deg);
    }

    50% {
        transform: rotateZ(45deg);
    }

    99% {
        transform: rotateZ(1deg);
    }

    100% {
        transform: rotateZ(0deg);
    }
}

@keyframes swapPrev {
    0% {
        transform: rotateZ(0deg) translateX(0%);
    }

    50% {
        transform: rotateZ(0deg) translateX(110%);
    }

    100% {
        transform: rotateZ(0deg) translateX(0%);
    }
}


/* Temp Card Flip Animation used in conjunction with transition on .card */

.flipped .front {
    transform: rotateY(180deg) !important;
}

.flipped .back {
    transform: rotateY(0deg) !important;
}


/* Next Card Animation */

.swap-next {
    transform-origin: 165% 158%;
    animation: swapNext .9s;
    animation-timing-function: ease-in-out;
    transition-property: none;
}


/* Prev Card Animation */

.swap-prev {
    transform-origin: 165% 158%;
    animation: swapPrev .9s;
    animation-timing-function: ease-in-out;
    transition-property: none;
}

// Buttons
.flashcard-container {
    .card-stack:focus {
        box-shadow: 1px 1px 75px cyan;
    }


    .card-controls {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        gap: 0.5em;
        width: auto;
        margin: 0.5em auto;
        padding: 0;
        flex-wrap: nowrap;
    }

    // BUTTONS
    button {
        pointer-events: all;
        @extend .btn;
        display: inline-block;
        margin: 0; // Remove all margin
        font-size: 0; // Hide text visually, but keep for screen readers
        letter-spacing: 0;
        padding: 3px;
        width: 30px;
        height: 30px;
        transition: background 0.2s, box-shadow 0.2s, border-color 0.2s;

        &:before {
            text-align: center;
        }

        // Visually hidden text for accessibility (screen readers)
        .visually-hidden {
            position: absolute !important;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            white-space: nowrap;
            border: 0;
        }

        // Focus indicator for accessibility
        &:focus {
            outline: 2px solid #005fcc;
            outline-offset: 2px;
            box-shadow: 0 0 0 3px #e3f2fd;
        }

        // Click feedback
        &:active,
        &.active {
            background: #1976d2; // Dark blue background
            box-shadow: 0 0 0 3px #0d47a1; // Darker blue shadow
            border-color: #0d47a1;
        }
    }

    .next:before {
        content: url(../html/assets/next.svg);
    }

    .prev:before {
        content: url(../html/assets/prev.svg);
    }

    .flip:before {
        content: url(../html/assets/flip.svg);
    }

    .view-table:before {
        content: url(../html/assets/table.svg);
    }

    .flip-all:before {
        content: url(../html/assets/flipall.svg);
    }

    .shuffle:before {
        content: url(../html/assets/shuffle.svg);
    }
}

//Working shuffle animation
.animation {
    animation: shuffle0 1.1s;

    :first-child {
        animation: shuffle 1.1s;
    }

    :nth-child(2) {
        animation: shuffle2 1.1s;
    }

    :nth-child(3) {
        animation: shuffle3 1.1s;
    }
}


@keyframes shuffle0 {
    0% {
        top: 0px;
    }

    25% {
        top: -50px;
        transform: rotate(-45deg)translate(-20px, -10px);
        z-index: 1000;
    }

    50% {
        top: 50px;
        transform: translate(0px, -10px);
        z-index: 1002;
    }

    75% {
        top: -50px;
        transform: rotate(45deg)translate(50px, -10px);
        z-index: 1001;
    }

    100% {
        top: 0px;
        z-index: 999;
    }

}


@keyframes shuffle {
    0% {
        top: 0px;
    }

    25% {
        top: 50px;
        transform: rotate(45deg) translate(-50px, -10px);
        z-index: 1002;
    }

    50% {
        top: -50px;
        transform: translate(50px, -10px);
        z-index: 1001;
    }

    75% {
        top: 50px;
        transform: rotate(-45deg) translate(-50px, -10px);
        z-index: 1002;
    }

    100% {
        top: 0px;
        z-index: 1000;
    }

}

@keyframes shuffle2 {
    0% {
        top: 0px;
    }

    25% {
        top: 50px;
        transform: rotate(-45deg) translate(50px, -10px);
        z-index: 999;
    }

    50% {
        top: -50px;
        transform: translate(-50px, -10px);
        z-index: 1001;
    }

    75% {
        top: 50px;
        transform: rotate(45deg) translate(50px, -10px);
        z-index: 1000;
    }

    100% {
        top: 0px;
        z-index: 1002;
    }

}

@keyframes shuffle3 {
    0% {
        top: 0px;
    }

    25% {
        top: -50px;
        transform: rotate(45deg)translate(-50px, -10px);
        z-index: 1000;
    }

    50% {
        top: 50px;
        transform: translate(0px, -10px);
        z-index: 1001;
    }

    75% {
        top: -50px;
        transform: rotate(-45deg)translate(-50px, -10px);
        z-index: 1002;
    }

    100% {
        top: 0px;
        z-index: 1001;
    }

}